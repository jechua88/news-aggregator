{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport class NewsAPI {\n  static async getNews() {\n    const response = await api.get('/news');\n    return response.data;\n  }\n  static async getSources() {\n    const response = await api.get('/sources');\n    return response.data;\n  }\n  static async getSourceStatus(sourceName) {\n    const encodedSourceName = encodeURIComponent(sourceName);\n    const response = await api.get(`/status/${encodedSourceName}`);\n    return response.data;\n  }\n  static async refreshNews() {\n    const response = await api.post('/refresh');\n    return response.data;\n  }\n}\nexport default NewsAPI;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","NewsAPI","getNews","response","get","data","getSources","getSourceStatus","sourceName","encodedSourceName","encodeURIComponent","refreshNews","post"],"sources":["C:/Users/jonat/news app/news-aggregator/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport interface NewsHeadline {\n  title: string;\n  link: string;\n  published_at: string;\n  source: string;\n}\n\nexport interface NewsSource {\n  name: string;\n  status: string;\n  headlines: NewsHeadline[];\n  last_updated?: string;\n}\n\nexport interface NewsResponse {\n  sources: NewsSource[];\n  total_sources: number;\n  last_updated: string;\n  cache_duration: number;\n}\n\nexport interface SourceStatus {\n  source: string;\n  status: string;\n  last_updated?: string;\n  error?: string;\n}\n\nexport interface RefreshResponse {\n  message: string;\n  sources_to_refresh: number;\n  errors?: string[];\n}\n\nexport class NewsAPI {\n  static async getNews(): Promise<NewsResponse> {\n    const response: AxiosResponse<NewsResponse> = await api.get('/news');\n    return response.data;\n  }\n\n  static async getSources(): Promise<NewsSource[]> {\n    const response: AxiosResponse<NewsSource[]> = await api.get('/sources');\n    return response.data;\n  }\n\n  static async getSourceStatus(sourceName: string): Promise<SourceStatus> {\n    const encodedSourceName = encodeURIComponent(sourceName);\n    const response: AxiosResponse<SourceStatus> = await api.get(`/status/${encodedSourceName}`);\n    return response.data;\n  }\n\n  static async refreshNews(): Promise<RefreshResponse> {\n    const response: AxiosResponse<RefreshResponse> = await api.post('/refresh');\n    return response.data;\n  }\n}\n\nexport default NewsAPI;"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAoCF,OAAO,MAAMC,OAAO,CAAC;EACnB,aAAaC,OAAOA,CAAA,EAA0B;IAC5C,MAAMC,QAAqC,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,OAAO,CAAC;IACpE,OAAOD,QAAQ,CAACE,IAAI;EACtB;EAEA,aAAaC,UAAUA,CAAA,EAA0B;IAC/C,MAAMH,QAAqC,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,UAAU,CAAC;IACvE,OAAOD,QAAQ,CAACE,IAAI;EACtB;EAEA,aAAaE,eAAeA,CAACC,UAAkB,EAAyB;IACtE,MAAMC,iBAAiB,GAAGC,kBAAkB,CAACF,UAAU,CAAC;IACxD,MAAML,QAAqC,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,WAAWK,iBAAiB,EAAE,CAAC;IAC3F,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,aAAaM,WAAWA,CAAA,EAA6B;IACnD,MAAMR,QAAwC,GAAG,MAAMP,GAAG,CAACgB,IAAI,CAAC,UAAU,CAAC;IAC3E,OAAOT,QAAQ,CAACE,IAAI;EACtB;AACF;AAEA,eAAeJ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}