{"ast":null,"code":"export const exportToJSON = (data, searchTerm) => {\n  const exportData = {\n    metadata: {\n      total_sources: data.total_sources,\n      last_updated: data.last_updated,\n      cache_status: data.cache_status,\n      exported_at: new Date().toISOString(),\n      search_term: searchTerm || null\n    },\n    sources: data.sources.map(source => ({\n      name: source.name,\n      status: source.status,\n      last_updated: source.last_updated,\n      headlines_count: source.headlines.length,\n      headlines: source.headlines.map(headline => ({\n        title: headline.title,\n        source: headline.source,\n        date: headline.date,\n        link: headline.link\n      }))\n    }))\n  };\n  const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n    type: 'application/json'\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `financial-news-${new Date().toISOString().split('T')[0]}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\nexport const exportToCSV = (data, searchTerm) => {\n  const headlines = [];\n  data.sources.forEach(source => {\n    source.headlines.forEach(headline => {\n      headlines.push({\n        ...headline,\n        source_name: source.name\n      });\n    });\n  });\n  const csvHeaders = ['Source Name', 'Headline', 'Original Source', 'Date', 'Link'];\n  const csvRows = headlines.map(headline => [headline.source_name, `\"${headline.title.replace(/\"/g, '\"\"')}\"`, headline.source, headline.date, headline.link]);\n  const csvContent = [csvHeaders.join(','), ...csvRows.map(row => row.join(','))].join('\\n');\n  const blob = new Blob([csvContent], {\n    type: 'text/csv'\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `financial-news-${new Date().toISOString().split('T')[0]}.csv`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};","map":{"version":3,"names":["exportToJSON","data","searchTerm","exportData","metadata","total_sources","last_updated","cache_status","exported_at","Date","toISOString","search_term","sources","map","source","name","status","headlines_count","headlines","length","headline","title","date","link","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","split","body","appendChild","click","removeChild","revokeObjectURL","exportToCSV","forEach","push","source_name","csvHeaders","csvRows","replace","csvContent","join","row"],"sources":["C:/Users/jonat/News App/news-aggregator/frontend/src/utils/exportUtils.ts"],"sourcesContent":["import { NewsResponse, NewsSource, Headline } from '../services/api';\n\nexport const exportToJSON = (data: NewsResponse, searchTerm?: string) => {\n  const exportData = {\n    metadata: {\n      total_sources: data.total_sources,\n      last_updated: data.last_updated,\n      cache_status: data.cache_status,\n      exported_at: new Date().toISOString(),\n      search_term: searchTerm || null,\n    },\n    sources: data.sources.map(source => ({\n      name: source.name,\n      status: source.status,\n      last_updated: source.last_updated,\n      headlines_count: source.headlines.length,\n      headlines: source.headlines.map(headline => ({\n        title: headline.title,\n        source: headline.source,\n        date: headline.date,\n        link: headline.link\n      }))\n    }))\n  };\n\n  const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `financial-news-${new Date().toISOString().split('T')[0]}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\n\nexport const exportToCSV = (data: NewsResponse, searchTerm?: string) => {\n  const headlines: Headline[] = [];\n  \n  data.sources.forEach(source => {\n    source.headlines.forEach(headline => {\n      headlines.push({\n        ...headline,\n        source_name: source.name\n      } as Headline & { source_name: string });\n    });\n  });\n\n  const csvHeaders = ['Source Name', 'Headline', 'Original Source', 'Date', 'Link'];\n  const csvRows = headlines.map(headline => [\n    (headline as any).source_name,\n    `\"${headline.title.replace(/\"/g, '\"\"')}\"`,\n    headline.source,\n    headline.date,\n    headline.link\n  ]);\n\n  const csvContent = [\n    csvHeaders.join(','),\n    ...csvRows.map(row => row.join(','))\n  ].join('\\n');\n\n  const blob = new Blob([csvContent], { type: 'text/csv' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `financial-news-${new Date().toISOString().split('T')[0]}.csv`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}