{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\news app\\\\news-aggregator\\\\frontend\\\\src\\\\components\\\\HeadlineItem.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeadlineItem = ({\n  headline,\n  className = ''\n}) => {\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      const now = new Date();\n      const diffMs = now.getTime() - date.getTime();\n      const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n      const diffMins = Math.floor(diffMs / (1000 * 60));\n      if (diffMins < 60) {\n        return `${diffMins}m ago`;\n      } else if (diffHours < 24) {\n        return `${diffHours}h ago`;\n      } else {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      return 'Unknown';\n    }\n  };\n  const getTimeColor = dateString => {\n    try {\n      const date = new Date(dateString);\n      const now = new Date();\n      const diffMins = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n      if (diffMins < 30) return 'text-emerald-600';\n      if (diffMins < 120) return 'text-blue-600';\n      if (diffMins < 360) return 'text-purple-600';\n      return 'text-gray-500';\n    } catch {\n      return 'text-gray-500';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `border-b border-gray-200 last:border-b-0 py-3 ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: headline.link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"block hover:bg-gray-50 transition-colors duration-150 rounded px-2 py-1 -mx-2 -my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-900 mb-1 leading-5\",\n        children: headline.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center text-xs text-gray-500 space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: headline.source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          dateTime: headline.published_at,\n          children: formatDate(headline.published_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = HeadlineItem;\nexport default HeadlineItem;\nvar _c;\n$RefreshReg$(_c, \"HeadlineItem\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HeadlineItem","headline","className","formatDate","dateString","date","Date","now","diffMs","getTime","diffHours","Math","floor","diffMins","toLocaleDateString","error","getTimeColor","children","href","link","target","rel","title","fileName","_jsxFileName","lineNumber","columnNumber","source","dateTime","published_at","_c","$RefreshReg$"],"sources":["C:/Users/jonat/news app/news-aggregator/frontend/src/components/HeadlineItem.tsx"],"sourcesContent":["import React from 'react';\nimport { NewsHeadline } from '../services/api.ts';\n\ninterface HeadlineItemProps {\n  headline: NewsHeadline;\n  className?: string;\n}\n\nconst HeadlineItem: React.FC<HeadlineItemProps> = ({ \n  headline, \n  className = '' \n}) => {\n  const formatDate = (dateString: string): string => {\n    try {\n      const date = new Date(dateString);\n      const now = new Date();\n      const diffMs = now.getTime() - date.getTime();\n      const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n      const diffMins = Math.floor(diffMs / (1000 * 60));\n\n      if (diffMins < 60) {\n        return `${diffMins}m ago`;\n      } else if (diffHours < 24) {\n        return `${diffHours}h ago`;\n      } else {\n        return date.toLocaleDateString();\n      }\n    } catch (error) {\n      return 'Unknown';\n    }\n  };\n\n  const getTimeColor = (dateString: string): string => {\n    try {\n      const date = new Date(dateString);\n      const now = new Date();\n      const diffMins = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n      \n      if (diffMins < 30) return 'text-emerald-600';\n      if (diffMins < 120) return 'text-blue-600';\n      if (diffMins < 360) return 'text-purple-600';\n      return 'text-gray-500';\n    } catch {\n      return 'text-gray-500';\n    }\n  };\n\n  return (\n    <div className={`border-b border-gray-200 last:border-b-0 py-3 ${className}`}>\n      <a \n        href={headline.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"block hover:bg-gray-50 transition-colors duration-150 rounded px-2 py-1 -mx-2 -my-1\"\n      >\n        <h3 className=\"text-sm font-medium text-gray-900 mb-1 leading-5\">\n          {headline.title}\n        </h3>\n        <div className=\"flex items-center text-xs text-gray-500 space-x-2\">\n          <span>{headline.source}</span>\n          <span>â€¢</span>\n          <time dateTime={headline.published_at}>\n            {formatDate(headline.published_at)}\n          </time>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default HeadlineItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}